import pygame

from particles import Particles


class Ship:
    def __init__(self, ai_game, simple: bool = True) -> None:
        self.settings = ai_game.settings
        self.screen = ai_game.screen
        self.screen_rect = ai_game.screen.get_rect()

        self.image = pygame.image.load("images/ship.png")
        self.orig_image = self.image
        self.rect = self.image.get_rect()

        self.rect.midbottom = self.screen_rect.midbottom
        self.rect.y -= 10

        self.moving_right = False
        self.moving_left = False
        self.moving_down = False
        self.moving_up = False
        self.x = float(self.rect.x)
        self.y = float(self.rect.y)
        self.script = SCRIPT[:]
        self.angle = 0
        self.simple = simple
        self.particles = Particles(self.screen)

    def update(self):
        if self.moving_right and self.rect.right < self.screen_rect.right:
            self.x += self.settings.ship_speed
        if self.moving_left and self.rect.left > self.screen_rect.left:
            self.x -= self.settings.ship_speed

        self.rect.x = self.x

        if self.moving_up and self.rect.top > self.screen_rect.top:
            self.y -= self.settings.ship_speed
        if self.moving_down and self.rect.bottom < self.screen_rect.bottom:
            self.y += self.settings.ship_speed

        self.rect.y = self.y

    def blitme(self):
        if not self.simple:
            self.particles.update(self.rect)
        self.screen.blit(self.image, self.rect)

    def center_ship(self):
        self.script = SCRIPT[:]
        self.angle = 0
        self._rotate()
        self.particles.start()
        self.rect.midbottom = self.screen_rect.midbottom
        self.rect.y -= 10
        self.x = float(self.rect.x)
        self.y = float(self.rect.y)

    def animate(self):
        self.particles.stop()
        if self.script:
            x, y, r = self.script.pop()
            self.rect.y += y
            self.rect.x += x
            self.angle = r
            self._rotate()

    def has_completed_animation(self):
        return len(self.script) == 0

    def _rotate(self):
        self.image = pygame.transform.rotozoom(self.orig_image, self.angle, 1)
        self.rect = self.image.get_rect(center=self.rect.center)


# x, y, rotation
SCRIPT = [
    (0, -35, 360),
    (0, -35, 360),
    (0, -35, 360),
    (0, -35, 360),
    (0, -35, 360),
    (0, -35, 360),
    (0, -35, 360),
    (0, -35, 360),
    (0, -35, 360),
    (0, -25, 360),
    (0, -25, 360),
    (0, -25, 360),
    (0, -25, 360),
    (0, -15, 360),
    (0, -15, 360),
    (0, -10, 360),
    (0, -10, 360),
    (0, -10, 360),
    (0, -9, 360),
    (0, -9, 360),
    (0, -8, 360),
    (0, -7, 360),
    (0, -6, 360),
    (0, -5, 360),
    (1, -5, 360),
    (1, -5, 360),
    (1, -4, 360),
    (1, -4, 360),
    (1, -4, 360),
    (1, -4, 360),
    (1, -3, 360),
    (1, -3, 360),
    (1, -3, 350),
    (1, -2, 350),
    (1, -2, 350),
    (1, -2, 350),
    (1, -1, 350),
    (1, -1, 350),
    (1, -1, 350),
    (1, -1, 350),
    (1, -1, 350),
    (2, -1, 350),
    (2, -1, 350),
    (2, -1, 350),
    (2, -1, 350),
    (2, -1, 350),
    (2, -1, 350),
    (2, -1, 350),
    (2, -1, 350),
    (2, -1, 340),
    (2, -1, 340),
    (2, -1, 340),
    (2, -1, 340),
    (2, -1, 340),
    (2, 0, 340),
    (2, 0, 340),
    (3, 0, 340),
    (3, 0, 340),
    (3, 0, 330),
    (2, 0, 330),
    (2, 0, 330),
    (2, 0, 330),
    (2, 1, 320),
    (2, 1, 320),
    (2, 1, 320),
    (2, 1, 320),
    (2, 1, 320),
    (2, 1, 320),
    (2, 1, 320),
    (2, 1, 320),
    (2, 1, 310),
    (2, 1, 310),
    (2, 1, 310),
    (2, 1, 310),
    (2, 1, 310),
    (2, 1, 310),
    (2, 1, 310),
    (2, 1, 310),
    (2, 1, 300),
    (2, 1, 300),
    (2, 1, 300),
    (2, 1, 290),
    (2, 1, 290),
    (2, 2, 290),
    (1, 2, 290),
    (1, 2, 290),
    (1, 2, 280),
    (1, 2, 280),
    (1, 2, 280),
    (1, 2, 280),
    (0, 2, 280),
    (0, 2, 270),
    (0, 2, 270),
    (0, 2, 270),
    (0, 2, 270),
    (0, 2, 260),
    (0, 2, 260),
    (0, 2, 260),
    (0, 2, 260),
    (-1, 2, 250),
    (-1, 2, 250),
    (-1, 2, 250),
    (-1, 2, 250),
    (-1, 2, 240),
    (-1, 2, 240),
    (-1, 2, 240),
    (-1, 2, 240),
    (-1, 2, 240),
    (-1, 1, 230),
    (-1, 1, 230),
    (-1, 1, 230),
    (-1, 1, 230),
    (-1, 1, 220),
    (-1, 1, 220),
    (-1, 1, 220),
    (-1, 1, 210),
    (-1, 1, 210),
    (-1, 1, 210),
    (-1, 1, 210),
    (-1, 1, 200),
    (-2, 1, 200),
    (-2, 1, 200),
    (-2, 1, 200),
    (-2, 1, 200),
    (-2, 1, 200),
    (-2, 1, 190),
    (-2, 1, 190),
    (-2, 1, 190),
    (-2, 1, 190),
    (-2, 1, 180),
    (-2, 1, 180),
    (-2, 1, 180),
    (-2, 1, 170),
    (-2, 1, 170),
    (-2, 1, 170),
    (-2, 1, 170),
    (-2, 0, 170),
    (-2, 0, 160),
    (-2, 0, 160),
    (-2, 0, 160),
    (-2, 0, 160),
    (-2, 0, 150),
    (-2, 0, 150),
    (-2, 0, 150),
    (-2, 0, 150),
    (-2, 0, 150),
    (-2, 0, 150),
    (-2, 0, 150),
    (-2, 0, 140),
    (-2, 0, 140),
    (-2, 0, 140),
    (-2, 0, 140),
    (-2, 0, 140),
    (-2, 0, 140),
    (-2, 0, 130),
    (-2, -1, 130),
    (-2, -1, 130),
    (-2, -1, 130),
    (-2, -1, 130),
    (-2, -1, 130),
    (-2, -1, 130),
    (-2, -1, 130),
    (-2, -1, 120),
    (-2, -1, 120),
    (-2, -1, 120),
    (-2, -1, 120),
    (-2, -1, 110),
    (-2, -1, 110),
    (-2, -1, 110),
    (-2, -1, 110),
    (-2, -1, 110),
    (-2, -1, 110),
    (-2, -1, 110),
    (-2, -1, 100),
    (-2, -1, 100),
    (-2, -2, 100),
    (-2, -2, 100),
    (-2, -2, 100),
    (-2, -2, 100),
    (-2, -2, 100),
    (-2, -2, 100),
    (-2, -2, 90),
    (-2, -2, 90),
    (-2, -2, 90),
    (-2, -2, 90),
    (-2, -2, 90),
    (-2, -2, 90),
    (-1, -2, 80),
    (-1, -2, 80),
    (-1, -2, 80),
    (-1, -2, 80),
    (-1, -2, 80),
    (-1, -2, 70),
    (-1, -2, 70),
    (-1, -2, 70),
    (-1, -2, 70),
    (-1, -2, 70),
    (-1, -2, 60),
    (-1, -2, 60),
    (-1, -2, 60),
    (-1, -2, 50),
    (-1, -2, 50),
    (-1, -2, 50),
    (-1, -2, 50),
    (-1, -2, 40),
    (-1, -2, 40),
    (-1, -2, 40),
    (-1, -2, 40),
    (-1, -2, 40),
    (-1, -2, 30),
    (-1, -2, 30),
    (-1, -2, 30),
    (-1, -2, 30),
    (-1, -2, 30),
    (-1, -2, 25),
    (-1, -2, 25),
    (-1, -2, 25),
    (-1, -2, 25),
    (-1, -2, 25),
    (-1, -2, 25),
    (-1, -2, 20),
    (-1, -2, 20),
    (-1, -2, 20),
    (-1, -2, 20),
    (-1, -2, 15),
    (-1, -2, 15),
    (-1, -2, 10),
    (-1, -2, 10),
    (-1, -2, 10),
    (-1, -2, 10),
    (-1, -2, 8),
    (-1, -2, 8),
    (-1, -2, 8),
    (-1, -2, 5),
    (-1, -2, 5),
    (-1, -2, 5),
    (-1, -2, 5),
    (-1, -2, 5),
    (0, -2, 5),
    (0, -2, 5),
    (0, -2, 5),
    (0, -2, 5),
    (0, -2, 3),
    (0, -2, 3),
    (0, -2, 3),
    (0, -2, 3),
    (0, -2, 3),
    (0, -2, 1),
    (0, -2, 1),
    (0, -2, 1),
    (0, -2, -0),
    (0, -2, -0),
    (0, -2, -0),
    (0, -2, -0),
    (0, -2, -2),
    (0, -2, -2),
    (0, -2, -2),
    (0, -2, -3),
    (0, -2, -5),
    (0, -2, -5),
    (0, -3, -5),
    (0, -3, -6),
    (0, -3, -6),
    (0, -3, -6),
    (0, -3, -6),
    (0, -3, -8),
    (0, -3, -8),
    (0, -3, -8),
    (0, -3, -8),
    (0, -3, -9),
    (0, -3, -9),
    (0, -3, -9),
    (0, -3, -9),
    (0, -3, -9),
    (0, -3, -9),
    (1, -2, -9),
    (1, -2, -12),
    (1, -2, -12),
    (1, -2, -12),
    (1, -2, -12),
    (1, -2, -12),
    (1, -2, -12),
    (2, -2, -12),
    (2, -2, -12),
    (2, -2, -12),
    (2, -2, -12),
    (2, -2, -15),
    (2, -2, -15),
    (2, -2, -15),
    (2, -2, -15),
    (2, -2, -15),
    (2, -2, -15),
    (2, -2, -15),
    (2, -2, -20),
    (2, -2, -15),
    (2, -2, -15),
    (2, -2, -15),
    (2, -2, -15),
    (2, -2, -15),
    (3, -2, -10),
    (3, -2, -10),
    (3, -2, -10),
    (3, -2, -10),
    (3, -2, -10),
    (3, -2, -10),
    (3, -2, -10),
    (3, -3, -10),
    (3, -3, -10),
    (2, -3, -5),
    (2, -3, -5),
    (0, -3, -5),
    (0, -3, -5),
    (0, -3, -5),
    (0, -3, 0),
    (0, -3, 0),
    (0, -3, 0),
    (0, -3, 0),
    (0, -3, 0),
    (0, -3, 0),
    (0, -3, 0),
    (0, -3, 0),
    (0, -3, 0),
    (0, -3, 0),
    (0, -3, 0),
    (0, -3, 0),
    (0, -3, 0),
    (0, -3, 0),
    (0, -3, 0),
    (0, -2, 0),
    (0, -2, 0),
    (0, -2, 0),
    (0, -2, 0),
    (0, -1, 0),
    (0, -1, 0),
]
